# Copyright 2020 The Trax Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import trax.supervised.lr_schedules
import trax.models
import trax.optimizers
import trax.rl

# Parameters for Policy:
# ==============================================================================
Policy.body = @trax.models.AtariCnnBody

# Parameters for Value:
# ==============================================================================
Value.body = @trax.models.AtariCnnBody

# Parameters for multifactor:
# ==============================================================================
value/multifactor.constant = 0.0001
value/multifactor.factors = 'constant'
policy/multifactor.constant = 0.0001
policy/multifactor.factors = 'constant'

# Parameters for RLTask:
# ==============================================================================
RLTask.env = "freeway"
RLTask.initial_trajectories = 100
RLTask.gamma = 0.999
RLTask.max_steps = 200
RLTask.dm_suite = True

# Parameters for td_lambda:
# ==============================================================================
td_lambda.lambda_ = 0.95

# Parameters for AWRTrainer:
# ==============================================================================
AWRTrainer.value_model = @trax.models.Value
AWRTrainer.value_optimizer = @trax.optimizers.Adam
AWRTrainer.value_batch_size = 32
AWRTrainer.value_train_steps_per_epoch = 1000
AWRTrainer.value_lr_schedule = @value/multifactor
AWRTrainer.value_evals_per_epoch = 10
AWRTrainer.value_eval_steps = 10
AWRTrainer.policy_model = @trax.models.Policy
AWRTrainer.policy_optimizer = @trax.optimizers.Adam
AWRTrainer.policy_batch_size = 32
AWRTrainer.policy_train_steps_per_epoch = 1000
AWRTrainer.policy_lr_schedule = @policy/multifactor
AWRTrainer.policy_evals_per_epoch = 10
AWRTrainer.policy_eval_steps = 10
AWRTrainer.n_trajectories_per_epoch = 10
AWRTrainer.advantage_estimator = @trax.rl.advantages.td_lambda
AWRTrainer.beta = 1.0
AWRTrainer.w_max = 20
AWRTrainer.max_slice_length = 1

# Parameters for PPOTrainer:
# ==============================================================================
PPOTrainer.n_shared_layers=0
PPOTrainer.value_model = @trax.models.Value
PPOTrainer.value_optimizer = @trax.optimizers.Adam
PPOTrainer.value_batch_size = 32
PPOTrainer.value_train_steps_per_epoch = 10
PPOTrainer.value_evals_per_epoch = 1
PPOTrainer.value_eval_steps = 1
PPOTrainer.value_lr_schedule = @value/multifactor
PPOTrainer.policy_model = @trax.models.Policy
PPOTrainer.policy_optimizer = @trax.optimizers.Adam
PPOTrainer.policy_batch_size = 32
PPOTrainer.policy_train_steps_per_epoch = 10
PPOTrainer.policy_lr_schedule = @policy/multifactor
PPOTrainer.policy_evals_per_epoch = 1
PPOTrainer.policy_eval_steps = 1
PPOTrainer.advantage_estimator = @trax.rl.advantages.td_lambda
PPOTrainer.n_trajectories_per_epoch = 10

# Parameters for train_rl:
# ==============================================================================
train_rl.light_rl = True
train_rl.light_rl_trainer = @trax.rl.AWRTrainer
train_rl.n_epochs = 5000
